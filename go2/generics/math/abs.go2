package math

import (
	"math"
	"github.com/chewxy/math32"
)

func (type T RegularNumber) simpAbs(x T) T {
	if x < 0 {
		return -x
	}
	return x
}

func (type T Float) AbsFloat(x T) T {
	switch v := x.(type) {
	case float64:
		return T(math.Abs(float64(v)))
	case float32:
		return T(math32.Abs(float32(v)))
	default:
		return simpAbs(T)(x)
	}
}

func (type T Int) AbsInt(x T) T {
	return simpAbs(T)(x)
}

func (type T RegularNumber) Abs(x T) T {
	switch v := x.(type) {
	case float64:
		return T(math.Abs(float64(v)))
	case float32:
		return T(math32.Abs(float32(v)))
	default:
		return simpAbs(T)(x)
	}
}

func (type C, F ComplexToFloat) AbsComplex(x C) F {
	return HypotFloat(F)(F(imag(x)), F(real(x)))
}
